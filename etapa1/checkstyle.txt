Starting audit...
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:5:20: Using the '.*' form of import should be avoided - fileio.input.*. [AvoidStarImport]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:10:8: Unused import - java.lang.reflect.Array. [UnusedImports]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:12:39: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:31:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setLibrary' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setLibrary' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:31:28: Parameter library should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:39:20: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:51:20: Parameter library should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:55:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:90:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:90:28: Parameter filters should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:94:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'songSearch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'songSearch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:110:64: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:112: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:130:30: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:142:68: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:144: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:154:74: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:156: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:164: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:178:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:179: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:183:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:184: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:195:66: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:197: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:207:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'parseResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'parseResults' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:207:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:207:46: Parameter parsedResults should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:212:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:217: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:220: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:221:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'clearResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'clearResults' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:221:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:221:46: Parameter parsedResults should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:223:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:230:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'endResult' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'endResult' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:230:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:230:40: Parameter parsedResults should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:231:27: 'results' hides a field. [HiddenField]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:234:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:234:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:234:33: '4' is a magic number. [MagicNumber]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:248:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'podcastSearch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'podcastSearch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:257:38: '4' is a magic number. [MagicNumber]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:268:38: '4' is a magic number. [MagicNumber]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:275:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'songSelect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'songSelect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:275:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:276:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:285:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:287:27: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:288:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:289:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:290:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:291:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:292:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:293:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:294:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:295:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:296:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:297:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:301:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:301:28: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:305:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setResults' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:305:28: Parameter results should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:309:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:309:28: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:313:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:313:29: Parameter username should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:317:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:317:30: Parameter timestamp should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:321:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:321:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:325:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setItemNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setItemNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Command.java:325:31: Parameter itemNumber should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:18:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:21:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:21:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:25:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:29:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:29:26: Parameter owner should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:34:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:38:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:38:26: Parameter album should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:42:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:46:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:46:25: Parameter tags should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:50:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:54:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:54:27: Parameter lyrics should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:58:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:62:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:62:26: Parameter genre should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:66:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:70:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:70:32: Parameter releaseYear should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:74:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:78:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:78:27: Parameter artist should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:82:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:84:26: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:85:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:86:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:87:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:88:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:89:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:90:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:91:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Filter.java:92:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Search.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Search.java:5:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\commands\Search.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\fileio\input\UserInput.java:18:30: Parameter playlists should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\main\Main.java:8:8: Unused import - com.fasterxml.jackson.databind.SerializationFeature. [UnusedImports]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\main\Main.java:19:8: Unused import - java.util.Iterator. [UnusedImports]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\main\Main.java:83: Line is longer than 100 characters (found 156). [LineLength]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:15:5: Class 'SearchTemplate' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchTemplate' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:19:5: Class 'SearchTemplate' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchTemplate' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:19:28: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:23:5: Class 'SearchTemplate' looks like designed for extension (can be subclassed), but the method 'getUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchTemplate' final or making the method 'getUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:27:5: Class 'SearchTemplate' looks like designed for extension (can be subclassed), but the method 'setUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchTemplate' final or making the method 'setUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:27:25: Parameter user should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:31:5: Class 'SearchTemplate' looks like designed for extension (can be subclassed), but the method 'getTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchTemplate' final or making the method 'getTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:35:5: Class 'SearchTemplate' looks like designed for extension (can be subclassed), but the method 'setTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchTemplate' final or making the method 'setTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:35:30: Parameter timestamp should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:39:5: Class 'SearchTemplate' looks like designed for extension (can be subclassed), but the method 'getMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchTemplate' final or making the method 'getMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:43:5: Class 'SearchTemplate' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchTemplate' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:43:28: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:47:5: Class 'SearchTemplate' looks like designed for extension (can be subclassed), but the method 'getResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchTemplate' final or making the method 'getResults' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:51:5: Class 'SearchTemplate' looks like designed for extension (can be subclassed), but the method 'setResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SearchTemplate' final or making the method 'setResults' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SearchTemplate.java:51:28: Parameter results should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:9:29: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:9:30: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:10:5: Class 'SelectTemplate' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectTemplate' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:14:5: Class 'SelectTemplate' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectTemplate' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:14:28: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:18:5: Class 'SelectTemplate' looks like designed for extension (can be subclassed), but the method 'getUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectTemplate' final or making the method 'getUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:22:5: Class 'SelectTemplate' looks like designed for extension (can be subclassed), but the method 'setUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectTemplate' final or making the method 'setUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:22:25: Parameter user should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:26:5: Class 'SelectTemplate' looks like designed for extension (can be subclassed), but the method 'getTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectTemplate' final or making the method 'getTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:30:5: Class 'SelectTemplate' looks like designed for extension (can be subclassed), but the method 'setTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectTemplate' final or making the method 'setTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:30:30: Parameter timestamp should be final. [FinalParameters]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:34:5: Class 'SelectTemplate' looks like designed for extension (can be subclassed), but the method 'getMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectTemplate' final or making the method 'getMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:38:5: Class 'SelectTemplate' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectTemplate' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\graur\IdeaProjects\oop-project-2023\etapa1\.\src\templates\SelectTemplate.java:38:28: Parameter message should be final. [FinalParameters]
Audit done.
Checkstyle ends with 145 errors.
